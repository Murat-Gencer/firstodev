/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradleOdev;

import java.util.ArrayList;

import static spark.Spark.get;
import static spark.Spark.port;
import static spark.Spark.post;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.lang.model.util.ElementScanner6;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static ArrayList<Integer>  compute (ArrayList<Integer> array, int e,String proces) {
        if(array == null || array.size()==0) {
            return null;
         }
        ArrayList<Integer> arr = new ArrayList<Integer>(array.size());
      int element;
      for (int i = 0; i < array.size() ; i++){
        if(proces.equals("/")){
          element=array.get(i)/e;
        }else if(proces.equals("*")){
          element=array.get(i)*e;
        }else if(proces.equals("+")){
          element=array.get(i)+e;
        }else if (proces.equals("-")){
          element=array.get(i)-e;
        }
        else{
          return null;
        }
        arr.add(i, element);
      }
;      return arr;
    }



    public static void main(String[] args) {
      
        Logger logger = LogManager.getLogger(App.class);

        int port = Integer.parseInt(System.getenv("&PORT"));
        port(port);
        logger.error("Current port number:" + port);

        port(getHerokuAssignedPort());

        get("/", (req, res) -> "Hello, World");
    
        post("/compute", (req, res) -> {
          
          String input1 = req.queryParams("input1");
          java.util.Scanner sc1 = new java.util.Scanner(input1);
          sc1.useDelimiter("[;\r\n]+");
          java.util.ArrayList<Integer> inputList = new java.util.ArrayList<>();
          
          while (sc1.hasNext())
          {
            int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
            inputList.add(value);
          }
          sc1.close();
          System.out.println(inputList);


          String input2 = req.queryParams("input2").replaceAll("\\s","");
          int input2AsInt = Integer.parseInt(input2);

          String input3=req.queryParams("input3");

          ArrayList<Integer> result = App.compute(inputList, input2AsInt,input3);
          Map<String, String > map = new HashMap<String,String>();
          if(result == null){
            map.put("result", "the input is not valid for the website please enter valid input");
          }else{

            String re="";
            for(int i = 0; i  < result.size();i++){
              re+=result.get(i)+" ";
            }
            map.put("result",re);
          }
          return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());


        get("/compute",
            (rq, rs) -> {
              Map<String, String> map = new HashMap<String, String>();
              map.put("result", "not computed yet!");
              return new ModelAndView(map, "compute.mustache");
            },
            new MustacheTemplateEngine());
    }

    static int getHerokuAssignedPort() {
        ProcessBuilder processBuilder = new ProcessBuilder();
        if (processBuilder.environment().get("PORT") != null) {
            return Integer.parseInt(processBuilder.environment().get("PORT"));
        }
        return 4567; //return default port if heroku-port isn't set (i.e. on localhost)
    }

}
